{
 "metadata": {
  "name": "",
  "signature": "sha256:849fbe9d089995ab6ccb09679cc6bde3e59c44bd14c88d290af034ebc52352c3"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import numpy as np\n",
      "import matplotlib.pyplot as plt\n",
      "%matplotlib inline\n",
      "\n",
      "filename = '/data/airline/2001.csv'"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "def get_column(filename, col):\n",
      "    result = []\n",
      "    \n",
      "    #converts the NA in col to 0\n",
      "    convert = {col: lambda x: 0 if x == b'NA' else int(x)}\n",
      "    \n",
      "    #opens filename for reading\n",
      "    file = open(filename, encoding = 'latin-1')\n",
      "    \n",
      "    result = np.loadtxt(file, delimiter = ',', converters = convert, skiprows = 1, usecols = (col,) ) \n",
      "   \n",
      "     \n",
      "    return result "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "days = get_column(filename, 3)\n",
      "delay = get_column(filename, 15)\n",
      "days = days[::500]\n",
      "delay = delay[::500]\n",
      "\n",
      "mask = (days > 0) & (delay > 0)\n",
      "\n",
      "days = days[mask]\n",
      "delay = delay[mask]\n",
      "\n",
      "delayFri = delay[ days == 5]\n",
      "\n",
      "delaySat = delay[ days == 6]\n",
      "\n",
      "delaySun = delay[ days == 7]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 17
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#The plot\n",
      "fig = plt.figure(figsize=(24, 10))\n",
      "ax = fig.add_subplot(111, axisbg='Ivory')\n",
      "\n",
      "ax.hist((delayFri, delaySat, delaySun), bins = 50, histtype = 'bar', normed = False,\n",
      "        color=('BurlyWood', 'IndianRed', 'DeepSkyBlue'), label = ('Friday','Saturday','Sunday'))\n",
      "\n",
      "ax.set_title(\"Karl Roth Histogram\")\n",
      "ax.set_xlabel(\"Departure Delay\")\n",
      "ax.set_ylabel(\"Frequency\")\n",
      "ax.legend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 26,
       "text": [
        "<matplotlib.legend.Legend at 0x7f76e26c8d68>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n4TnxxBPz1re+NW1tbZk6dWrnuUuWLMmQIUPy6quvJklaW1vzhS98IZMmTcro0aNz8skn57nnnus8\nf+bMmTnggAOyxx575Morr+z23HvvvTfHHXdcWlpasu++++bjH/941q5dmyT52Mc+lk9/+tPdzj/9\n9NNz/fXXN+pneN2EuwAAAADAgJgwYUKGDh2aCy+8MHfffXfa29s75/rSQmH27Nn51re+leXLl+fl\nl1/ONddckyRZuHBhLr744vzDP/xDnnzyyTz33HNZtmxZ53XDhg3LV77ylTz33HP593//98yZMyc3\n3HBDkuTCCy/M7Nmz09FRrWx+9tlnM2fOnJx//vn9+dX7hXAXAAAAABgQo0aNyvz581Or1fKRj3wk\ne+21V84444wsX768M1zdlFqtlr/4i7/IwQcfnOHDh+ecc87Jr3/96yTJP/3TP+W0007LpEmTsvPO\nO+eKK67IkCGvRaFHHXVUjjnmmAwZMiQHHHBALrroovz85z9PkkycODFNTU2dL1/7zne+k3e/+93Z\nc889G/QrvH7CXQAAAABgwLzpTW/KzTffnKVLl2bBggV58sknc8kll/Rp5e7YsWM790eMGJE1a9Yk\nSZ588smMGzeuc27XXXfN7rvv3nm8ePHinHrqqdlnn33S1NSUz33uc91aOkybNi2zZs1KksyaNatb\ne4jBRLgLAAAAAAwKEyZMyPTp07NgwYLstttuefHFFzvnnnrqqT7fZ999983SpUs7j1988cVu4e1f\n//Vf57DDDsvDDz+cVatW5Utf+lJnL98kueCCC3LHHXfkgQceyKJFi3LmmWdu5TdrDOEuAAAAADAg\nHnrooVx33XV54oknkiRLly7N7Nmzc9xxx+XII4/Mv/7rv2bp0qVZtWpVrrrqqo2u31Trhg984AO5\n66678m//9m95+eWX84UvfKFbeLtmzZqMGjUqu+66axYtWpSvfe1r3a4fN25cjj766EybNi0f/OAH\ns8suu/Tjt+4/wl0AAAAAYECMGjUq99xzT4499tiMHDkyxx13XI444ohce+21ee9735tzzz03Rxxx\nRCZOnJjTTjtto1YNXY9rtVrn8eGHH56/+7u/y5QpU7LvvvtmzJgxGT9+fOe511xzTW699daMHj06\nF110Uc4777yN7j19+vQ8+OCDg7YlQ5JsvnHF4NPR0bGyX2706quvZtmyJzY5P2ZMS0aOHNkvzwIA\n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\nE/3/LtZPlPF9s3v359ouoRGr4e9qLVor85PytDk3B/0MXis/fxnM2slqNWw7d5+c5Gvzzu9P8tyW\nagFgCRbtI1yoga/rmg/2DQ6X+lb/RdtnNHWhvZHRZXtNSRW4Tk0PaA9x6ZuTy3Ycc/OJ7Kadmp5e\ntjk4qK3F6Lp1OfToo/0/eYm71E/0Qnsn0mqiqYv6PZad48PcQuNE58X42Fi6B5f2tW3quQb9Xf3o\nJW/qux6cyGsqwVLnnwtlrg6DflYN+1w3B+cs97t0Bv4O0+AFkBkuJa8Xw6DUr9+wr7XDFu72/9fQ\nAOtGRnLVtf+Zf/2Pe48Zu2//Q/nmum7ueeQ7x4zd862HkulPZexPXnTM2KGph3LS6aeeSDkArBWH\nDy3bPyIGhchJgxfaW8bXlCxv4NqkxcLJ5XxNJxqEnsg/Ykto1zHMLTSGaV408X21Wv/TbpClzr8S\nvqdYXKk/qxJzcCUtOi+G9GcVK6vk9WIYlPr1G/a1dthWnecl2ZHqompJsj3Jozn6omr3JfmRZssC\nAAAAAFh2X03y9LaLWC6jqV7QxiQnJ7kjyTPbLAgAAAAAgONzSZL/SbVDt/29zQAAAAAAAAAAAACw\n1mxNcm+SryR5Q8u1QJLsS3JXktuT3FLftj7JJ5J8OcmNSXpfYhqW13uSHEjyX/NuGzQXt6daS+9N\ncnFDNbI29ZqbO5Lcn2rtvD3VO3aOMDdp0lOT7Ery30nuTvLa+nbrJ23rNzd3xPpJux6X5POp2id+\nKcmRqwtZNxkG/ebnjlg7GQ4jqebg9fX5mls7R1K1adiY5KToxctw2Jvqm3G+tyX5w/r4DUne0mhF\nrFUXJjknRwdo/ebis1KtoSelWlPvS7KukSpZi3rNzTcneX2P+5qbNO3MJGfXx09I1RbsmbF+0r5+\nc9P6yTA4pf44muTmJBfEusnw6DU/rZ0Mi9cneX+S6+rzZVs7S5m456d6MfuSfD/JB5O8tM2CoNZZ\ncP6SJFfXx1cneVmz5bBG3ZSku+C2fnPxpUmuSbWW7ku1tp6/8iWyRvWam8mxa2dibtK8b6b6xTlJ\nvp3kniRPjvWT9vWbm4n1k/Y9Un88OdUmrG6smwyPXvMzsXbSvqck+bkkV2ZuPi7b2llKuPvkJF+b\nd35/5n7BgbbMJvlkki8keVV92xmp3oKc+uMZLdQFSf+5+MOp1tAjrKe04TVJ7kxyVebefmRu0qaN\nqXaZfz7WT4bLxlRz8+b63PpJ29al+s+HA5lrH2LdZFj0mp+JtZP2vT3JHyR5dN5ty7Z2lhLuzrZd\nAPTwglS/bF+S5LdTvf14vtmYuwyHxeaieUqT3pVkU6q3HD+Q5C8G3NfcpAlPSPLRJK9LMrNgzPpJ\nm56Q5COp5ua3Y/1kODyaag4+JclPJdmyYNy6SZsWzs/JWDtp34uSPJiq326vXeTJY1w7Swl3v57q\nwgJHPDVHp9jQhgfqjw8l+ViqbfIHUvVJS5KzUn0DQxv6zcWF6+lT6tugKQ9m7peXKzP3FiNzkzac\nlCrYfV+Sa+vbrJ8MgyNzc2fm5qb1k2FyMMm/JDk31k2Gz5H5eV6snbTv+alaMOxN1W7hp1P97rnm\n1s7RJF9N9bakk+OCarTvlCSn1cenJvn3VFcwfFuqRthJ8sa4oBrN2ZhjL6jWay4eac5+cqr/wf5q\n+v/vISyHjTl6bp417/h3k3ygPjY3aVonyXtTvU1uPusnbes3N62ftO1JmXtL++OTfDbJz8S6yXDo\nNz/PnHcfaydte2GS6+vjNbl2XpLqSrH3Jdneci2wKdU32x1J7s7cnFyfqg/vl5PcmLkfLrCSrkny\njSTfS9Wf/BUZPBfflGotvTfJzzZaKWvNwrn5ylSBxV2p+p5dm6N7k5ubNOmCVG/fvCPV2+RuT7I1\n1k/a12tuXhLrJ+17dpIvppqbd6XqH5lYNxkO/eantZNh8sIk19XH1k4AAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhtXhJLcnuTvJHUlen6TTwPNemuSsFXrsySQHk3wxyb1J\nPpPk54/j8y5L8o4VqgkAgFVstO0CAABYkx5Jck59fHqSDyQZS7JjBZ9zJFWQeneSB5bweaNJDh3n\nfT+b5MX18XOSXJvku0k+PeBzZpdQCwAAAABAq2YWnG9K8q36eCTJnyW5JcmdSV5d3z6ZKjz9eKqd\nse/K3G7fv0lya6rgdse8x92X5C1Jbkvya/Xz3ptqd+3j6vH19X3PS7KrPt6R5H1JPpfk/UmelOQj\ndU23JHl+j9c0meT6Bbe9Isk/1cen93mMSzO3c/fFSW6u6/tEkh9Ksi7Jl+saUp9/JckP9qgBAAAA\nAGBFLQx3k6SbKsx8dZI/qm/7gVSh7cZU4el36+N1SW5M8ov1/SbqjyOpAtofq8/3Jvn9ec+xK8lP\nzDvfm/7h7q318yfVzuIX1McbknypR/2TOTbcPXveffs9xmWZC3fH533ubyT58/r4T5O8rj6+OMk/\n9nh+AADWGG0ZAAAYNhcneXaSX6rPx5I8PVVrhFtS7bZNkmuSXJDko0l+OcmrUv1+e1aSZ6XaxZsk\nH1rw+MfT23c2yXVJ/rc+vyjJM+eNn5bklFTtJQaZ/1y9HuPUBfd/apIPJzkzycmpwuckeU+Sf07y\nV0lemeTvj+M1AACwygl3AQAYBptTXWTtwfr8d1K1JZhvMkf3p+3U5xuT/F6qnbcHUwWfj5t3v+8s\neJz5j3Eo1S7gLPic5OjgtpPkuUm+N/BVHOuczO3Q7fcY8+t5R6rduh9P8sLMtZi4P8mBJD+d5CeT\n/MoS6wAAYBVat/hdAABgRZ2e5N2Za03wb0l+K3MbEZ6RapdskpyfubYML09yU6qdvd9JMp3kjCSX\nDHiumfr+R+xLFQoncy0ekmN3996Y5LXzzs8e8BxH/HiSP07y14s8xvznGkvyjfr4sgWPd2WSnal2\n9roIGwAAdu4CANCKxye5PclJqXbPvjfJ2+uxK1MFuF9MFXw+mOQX6rFbk7wzVZuGTyf5WH377aku\nlPa1VBdB6+cfUgXJj6S6oNnlSa5KFQzvzlxoOpujA9TXpgpp70z1O/RnUgXQ880mubCu+5S67tdk\nro9vv8eY/1w7UvXT7dav72nzHv/6VLuStWQAAAAAAIoymWMvWLaWnJcqEAYAgCR27gIAUI6Fu2nX\nkjcm+c0kv9p2IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA04v8AvgUr\n85cQxf4AAAAASUVORK5CYII=\n",
       "text": [
        "<matplotlib.figure.Figure at 0x7f76e2715e48>"
       ]
      }
     ],
     "prompt_number": 26
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}